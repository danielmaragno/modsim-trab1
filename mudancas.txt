O simulador de eventos é um while (enquanto o evento sendo processado não é o fim da simulação).
Ele trabalha com uma lista ordenada por tempo, com eventos dentro.
O tempo vai ser uma variavel inicializada em 0. A lista de eventos começa com um evento(inicio, 0)

A cada iteração ele:
	1. evento = próximo evento da lista
	2. Põe que o tempo atual é igual ao tempo do evento sendo processado
	3. Faz um switch com o evento.getTipo():
		3.1. case inicio:
			3.1.1. cria um evento(chegada1, tempo atual)
			3.1.2. cria um evento(chegada2 , tempo atual)
			3.1.3. cria um evento(falha, tempo atual, null, servidor 1)
			3.1.4. cria um evento(falha, tempo atual, null, servidor 2)
			3.1.5. cria um evento(fim, tempo final de execução)
			3.1.6. adiciona todos a fila

		3.2. case chegada1:
			chegadaTipo1();

		3.3. case chegada2:
			chegadaTipo2();

		3.4. case falha:
			startFalha(evento.getServidor());

		3.5. case repara:
			reparaFalha(evento.getServidor());

		3.6. case buscaRecurso:
			direcionaEntidade(evento.getEntidade());

		3.7. case consome:
			entidade = evento.getEntidade()
			server = evento.getServer()
			consomeRecurso(server, entidade)

		3.8. case fimEntidade:
			entidade = evento.getEntidade()
			finalizaEntidade(entidade)

		3.8. case fim:
			encerra simulação


Além deste while, é necessário mudar as seguintes funções:

chegaTipo1()
	Em vez de usar set interval, cria outro evento(chegada1, tempo atual + desvio para prox chegada)

chegadaTipo2()
	idem que tipo1, so que usando chegada2

buscaRecurso(server, entidade)
	quando o servidor está pronto em vez de chamar função consome recurso se cria um evento(consome, tempo atual, entidade, server)

consomeRecurso(server, entidade)
	1. variavel tempo de processamento = tempo gerado
	2. caso o servidor esteja falhado, para aqui mesmo e adiciona a entidade ao inicio da fila do servidor
	3. caso contrário, em vez de usar set interval, cria um evento(consome, tempo atual + tempo de processamento, prox. entidade da fila, server)
		3.1. cria um evento(fimEntidade, tempo atual, entidade)

startFalha(server)
	em vez de set interval, cria evento(repara, tempo atual + tempo até reparo, null, server)

handleFalha(server)
	1. em vez de set interval, cria evento(falha, tempo atual + tempo até a próxima falha, null, server)
	2. cria um evento(consome, tempo atual, prox entidade na fila do server, server)


Pra fazer os botões de passagem de evento, é só mudar o loop pra esperar o next
pra fazer passagem de tempo mais divagar, é só ver no while se o tempo atual é diferente do tempo do evento. Se for, da um set interval relativo ao tempo que passa na mudança do evento






